[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\mantis_solenoid_esim\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/frameworks/mantis_solenoid_esim/build/bootloader/bootloader.bin"
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esim.c.obj
C:/Espressif/frameworks/mantis_solenoid_esim/main/esim.c:40:13: warning: 'configure_output' defined but not used [-Wunused-function]
   40 | static void configure_output(int num_gpio)
      |             ^~~~~~~~~~~~~~~~
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable mantis_solenoid_esim.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/frameworks/mantis_solenoid_esim/build/mantis_solenoid_esim.bin
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\mantis_solenoid_esim\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/mantis_solenoid_esim/build/partition_table/partition-table.bin C:/Espressif/frameworks/mantis_solenoid_esim/build/mantis_solenoid_esim.bin"
mantis_solenoid_esim.bin binary size 0x39f60 bytes. Smallest app partition is 0x100000 bytes. 0xc60a0 bytes (77%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworkesptool.py --chip esp32s3 -p COM11 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 mantis_solenoid_esim.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM11
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 84:fc:e6:7d:69:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00049fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21072 bytes to 13087...
Writing at 0x00000000... (100 %)
Wrote 21072 bytes (13087 compressed) at 0x00000000 in 0.6 seconds (effective 291.0 kbit/s)...
Hash of data verified.
Compressed 237408 bytes to 120987...
Writing at 0x00010000... (12 %)
Writing at 0x0001db0e... (25 %)
Writing at 0x000255b5... (37 %)
Writing at 0x0002be5b... (50 %)
Writing at 0x000327b9... (62 %)
Writing at 0x0003ae4e... (75 %)
Writing at 0x00040f79... (87 %)
Writing at 0x000475a6... (100 %)
Wrote 237408 bytes (120987 compressed) at 0x00010000 in 2.9 seconds (effective 653.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 509.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
s/esp-idf-v5.2.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/mantis_solenoid_esim/build -P C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/run_serial_tool.cmake"
