[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\mantis_solenoid_esim\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/frameworks/mantis_solenoid_esim/build/bootloader/bootloader.bin"
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable mantis_solenoid_esim.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/frameworks/mantis_solenoid_esim/build/mantis_solenoid_esim.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\mantis_solenoid_esim\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/mantis_solenoid_esim/build/partition_table/partition-table.bin C:/Espressif/frameworks/mantis_solenoid_esim/build/mantis_solenoid_esim.bin"
mantis_solenoid_esim.bin binary size 0x379c0 bytes. Smallest app partition is 0x100000 bytes. 0xc8640 bytes (78%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.2.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/mantis_solenoid_esim/build -P C:/Espressif/frameworks/esp-iesptool.py --chip esp32s3 -p COM11 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 mantis_solenoid_esim.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM11
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 84:fc:e6:7d:69:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00047fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21072 bytes to 13087...
Writing at 0x00000000... (100 %)
Wrote 21072 bytes (13087 compressed) at 0x00000000 in 0.6 seconds (effective 295.8 kbit/s)...
Hash of data verified.
Compressed 227776 bytes to 116311...
Writing at 0x00010000... (12 %)
Writing at 0x0001d707... (25 %)
Writing at 0x00025039... (37 %)
Writing at 0x0002b775... (50 %)
Writing at 0x00031fd2... (62 %)
Writing at 0x0003a586... (75 %)
Writing at 0x00040374... (87 %)
Writing at 0x00046eb6... (100 %)
Wrote 227776 bytes (116311 compressed) at 0x00010000 in 2.7 seconds (effective 668.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 532.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
df-v5.2.1/components/esptool_py/run_serial_tool.cmake"
